{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","error","setError","loading","setLoading","data","setData","useEffect","fetch","then","res","json","result","top","console","log","message","className","href","map","item","key","src","image_url","alt","title","rank","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4OA2DeA,MAxDf,WAAgB,IAAD,EACaC,mBAAS,MADtB,mBACNC,EADM,KACCC,EADD,OAEiBF,oBAAS,GAF1B,mBAENG,EAFM,KAEGC,EAFH,OAGWJ,mBAAS,IAHpB,mBAGNK,EAHM,KAGAC,EAHA,KA4Bb,OAvBAC,qBAAU,WACRC,MAAM,qDAAsD,CACxD,OAAU,MACV,QAAW,CACT,iBAAkB,qDAClB,kBAAmB,2BAGtBC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MACC,SAACG,GACCR,GAAW,GACXE,EAAQM,EAAOC,KACfC,QAAQC,IAAIH,EAAOC,QAGrB,SAACZ,GACCG,GAAW,GACXF,EAASD,QAGd,IAEAA,EACM,0CAAaA,EAAMe,WAClBb,EAIR,qBAAKc,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,qBAAKA,UAAU,QAAf,SACE,uCAAS,mBAAGC,KAAK,GAAR,SAAW,4CAApB,6CAEJ,iDACA,qBAAKD,UAAU,iBAAf,SACGZ,EAAKc,KAAI,SAACC,EAAMC,GAAP,OACR,sBAAKJ,UAAU,YAAf,UACE,qBAAKK,IAAKF,EAAKG,UAAWC,IAAI,QAC9B,8BACE,6BAAKJ,EAAKK,UAEZ,uCAAUL,EAAKM,UALeL,aAX/B,8CCtBIM,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBpB,MAAK,YAAkD,IAA/CqB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.60aa0628.chunk.js","sourcesContent":["import { useState, useEffect } from 'react';\nimport './App.css';\n\nfunction App() {\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [data, setData] = useState([]);\n\n  useEffect(() => {\n    fetch(\"https://jikan1.p.rapidapi.com/top/anime/1/upcoming\", {\n        \"method\": \"GET\",\n        \"headers\": {\n          \"x-rapidapi-key\": \"a9500b4c25msh1c6e462bfe9c887p1a2de3jsn2f4d0bc9e858\",\n          \"x-rapidapi-host\": \"jikan1.p.rapidapi.com\"\n        }\n      })\n      .then(res => res.json())\n      .then(\n        (result) => {\n          setLoading(true);\n          setData(result.top);\n          console.log(result.top)\n        },\n    \n        (error) => {\n          setLoading(true);\n          setError(error);\n        }\n      )\n  }, [])\n\n  if(error){\n    return <div>Error: {error.message}</div>; }\n  else if (!loading){\n    return <div>Loading...</div>;}\n  else {\n    return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <div className=\"alert\">\n          <p>Click <a href=\"\"><strong>here</strong></a> to get the source code from Github. </p>\n        </div>\n      <h1>Top Manga Books</h1>\n      <div className=\"grid-container\">\n        {data.map((item, key) => (\n          <div className=\"grid-item\" key={key}> \n            <img src={item.image_url} alt=\"img\"/>\n            <div>\n              <h6>{item.title}</h6>\n            </div>\n            <h4>Rank {item.rank}</h4>\n          </div>\n        ))}\n      </div>\n      </header>\n    </div> );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}